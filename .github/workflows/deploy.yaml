name: terraform-deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  PushToAWS:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_AMI_ID: ${{ secrets.AWS_AMI_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install dependencies and build React app
        run: |
          cd Landing-page-react
          npm install
          npm run build

      - name: Archive production artifacts
        run: |
          cd Landing-page-react
          zip -r react_build.zip build

      - name: Deploy to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ${{ secrets.AWS_KEY_PATH }} Landing-page-react/react_build.zip ec2-user@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_KEY_PATH }} ec2-user@${{ secrets.EC2_PUBLIC_IP }} "sudo unzip /home/ec2-user/react_build.zip -d /var/www/html/"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform fmt && terraform init -upgrade

      - name: Terraform Plan
        id: plan
        run: terraform plan
        env:
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_aws_ami_id: ${{ secrets.AWS_AMI_ID }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_aws_ami_id: ${{ secrets.AWS_AMI_ID }}
